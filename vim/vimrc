vim9script
if $VIM_ENABLERC != "0" || $VIM_ENABLERC == ""
    syntax on
    set nu
    set ruler
    set smartindent
    set splitbelow
    set hidden
    set hlsearch
    set expandtab
    set tabstop=4
    set shiftwidth=4
    set encoding=UTF-8
    set background=dark
    set signcolumn=number
    set backspace=indent,eol,start
    set wildmenu wildmode=full
    set wildchar=<Tab> wildcharm=<C-Z>
    g:netrw_bufsettings = 'noma nomod nu nobl nowrap ro'

    highlight Visual cterm=bold ctermbg=darkgrey
    highlight SignColumn ctermbg=darkgrey

    autocmd InsertLeave * se nocul
    autocmd InsertEnter * se cul

    inoremap jj <Esc>
    nnoremap <silent><F10> :ter<cr>

    # Enable folding
    set foldmethod=indent
    set foldlevel=99
    nnoremap <space> za

    if $VIM_ENABLEPLUG != "0" || $VIM_ENABLEPLUG == ""
        call plug#begin()

        Plug 'airblade/vim-gitgutter'
        Plug 'powerline/powerline', {'rtp': 'powerline/bindings/vim/'}
        Plug 'Chiel92/vim-autoformat'
        Plug 'jiangmiao/auto-pairs'
        Plug 'sillybun/vim-repl'
        Plug 'preservim/nerdcommenter'
        Plug 'ycm-core/YouCompleteMe'
        Plug 'dense-analysis/ale'
        Plug 'Vimjas/vim-python-pep8-indent'
        Plug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }
        Plug 'roxma/vim-tmux-clipboard'
        Plug 'mbbill/undotree'

        Plug 'SirVer/ultisnips'
        Plug 'honza/vim-snippets'

        Plug 'skywind3000/asynctasks.vim'
        Plug 'skywind3000/asyncrun.vim'

        call plug#end()

        # Powerline
        set laststatus=2
        set showtabline=2
        set noshowmode

        # Autoformat
        # au BufWrite * :Autoformat
        nnoremap <F3> :Autoformat<CR>
        autocmd FileType vim,tex b:autoformat_autoindent=0
        g:formatter_yapf_style = 'pep8'
        g:r_indent_align_args = 0
        g:formatdef_astyle_c = '"astyle --mode=c --style=google"'
        g:formatters_c = ['astyle_c']
        g:formatters_cpp = ['astyle_c']

        # YCM
        g:ycm_autoclose_preview_window_after_insertion = 1
        g:ycm_autoclose_preview_window_after_completion = 1

        # asyncrun.vim
        g:asyncrun_open = 6
        g:asynctasks_term_pos = 'quickfix'
        g:asynctasks_term_reuse = 1
        nnoremap <silent><F5> :AsyncTask file-run<cr>
        nnoremap <silent><F9> :AsyncTask file-build<cr>

        # vim-repl
        nnoremap <leader>r :REPLToggle<Cr>
        nnoremap <leader>e :REPLSendSession<Cr>
        g:repl_python_pre_launch_command = 'source venv/bin/activate'
        g:repl_program = {
            'python': 'ptpython',
            'default': 'zsh',
            'r': 'R --no-save',
            'lua': 'lua'
            }
        g:repl_predefine_python = {
            'numpy': 'import numpy as np',
            'pandas': 'import pandas as pd',
            'matplotlib': 'import matplotlib.pyplot as plt'
            }
        g:repl_exit_commands = {
            'ptpython': 'exit()',
            'radian': 'q()',
            'R': 'q()',
            'bash': 'exit',
            'zsh': 'exit',
            'default': 'exit'
            }
        g:repl_position = 0
        g:repl_console_name = 'REPL'
        g:repl_cursor_down = 1
        g:repl_python_auto_send_unfinish_line = 0
        g:repl_python_automerge = 1
        g:repl_python_auto_import = 0

        # change repl position
        def REPL_change_position()
           if g:repl_position == 0
               g:repl_position = 3
               echom "Present REPL position: right"
           elseif g:repl_position == 3
               g:repl_position = 0
               echom "Present REPL position: bottom"
           endif
        enddef
        command REPLChangePosition :call REPL_change_position()
        noremap <silent><F12> :REPLChangePosition<cr>

        # ultisnips
        g:UltiSnipsExpandTrigger = "<F1>"

        # ALE
        g:ale_r_lintr_options = "with_defaults(camel_case_linter = NULL)"
        g:ale_r_lintr_options = "with_defaults(object_name_linter = NULL)"
        g:ale_python_flake8_options = '--config=$HOME/.config/flake8'
        g:ale_linters = {'python': ['flake8']}

        # LeaderF
        g:Lf_WindowHeight = 0.30
        g:Lf_WildIgnore = {
            'file': ['*.pyc'],
            'dir': ["venv", "renv", "__pycache__"]
        }
        g:Lf_PreviewResult = {
            'File': 0,
            'Buffer': 0,
            'Mru': 0,
            'Tag': 0,
            'BufTag': 1,
            'Function': 1,
            'Line': 0,
            'Colorscheme': 0,
            'Rg': 0,
            'Gtags': 0
        }
        nnoremap <leader>f :LeaderfSelf<cr>
        nnoremap <leader>fl :LeaderfLine<cr>
        nnoremap <leader>ft :LeaderfBufTag<cr>
        nnoremap <leader>ff :LeaderfFile<cr>
        nnoremap <leader>fu :LeaderfFunction<cr>

        # undotree
        nnoremap <F8> :UndotreeToggle<CR>

    endif
endif
